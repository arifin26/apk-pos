{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}},{"name":"./placeholders","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var _utils = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"./utils\"));\n\n  var _placeholders = _$$_REQUIRE(_dependencyMap[2], \"./placeholders\");\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n\n    if (obj != null) {\n      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n          if (desc && (desc.get || desc.set)) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  (0, _utils.default)(\"Noop\", {\n    visitor: []\n  });\n  (0, _utils.default)(\"Placeholder\", {\n    visitor: [],\n    builder: [\"expectedNode\", \"name\"],\n    fields: {\n      name: {\n        validate: (0, _utils.assertNodeType)(\"Identifier\")\n      },\n      expectedNode: {\n        validate: (0, _utils.assertOneOf).apply(void 0, _toConsumableArray(_placeholders.PLACEHOLDERS))\n      }\n    }\n  });\n  (0, _utils.default)(\"V8IntrinsicIdentifier\", {\n    builder: [\"name\"],\n    fields: {\n      name: {\n        validate: (0, _utils.assertValueType)(\"string\")\n      }\n    }\n  });\n});","lineCount":82,"map":[[2,0,1,0],[6,0,3,0],[6,6,3,4,"_utils"],[6,12,3,10],[6,15,3,13,"_interopRequireWildcard"],[6,38,3,36],[6,39,3,37,"require"],[6,50,3,44],[6,80,3,36],[6,81,3,0],[8,0,5,0],[8,6,5,4,"_placeholders"],[8,19,5,17],[8,22,5,20,"require"],[8,33,5,27],[8,70,5,0],[10,0,7,0],[10,11,7,9,"_getRequireWildcardCache"],[10,35,7,0],[10,38,7,36],[11,0,7,38],[11,8,7,42],[11,15,7,49,"WeakMap"],[11,22,7,42],[11,27,7,61],[11,37,7,38],[11,39,7,73],[11,46,7,80],[11,50,7,73],[12,0,7,86],[12,8,7,90,"cache"],[12,13,7,95],[12,16,7,98],[12,20,7,102,"WeakMap"],[12,27,7,98],[12,29,7,86],[14,0,7,113,"_getRequireWildcardCache"],[14,4,7,113,"_getRequireWildcardCache"],[14,28,7,137],[14,31,7,140],[14,67,7,152],[15,0,7,154],[15,13,7,161,"cache"],[15,18,7,154],[16,0,7,169],[16,5,7,113],[18,0,7,171],[18,11,7,178,"cache"],[18,16,7,171],[19,0,7,186],[21,0,9,0],[21,11,9,9,"_interopRequireWildcard"],[21,34,9,0],[21,35,9,33,"obj"],[21,38,9,0],[21,40,9,38],[22,0,9,40],[22,8,9,44,"obj"],[22,11,9,47],[22,15,9,51,"obj"],[22,18,9,54],[22,19,9,55,"__esModule"],[22,29,9,40],[22,31,9,67],[23,0,9,69],[23,13,9,76,"obj"],[23,16,9,69],[24,0,9,82],[26,0,9,83],[26,8,9,87,"cache"],[26,13,9,92],[26,16,9,95,"_getRequireWildcardCache"],[26,40,9,119],[26,42,9,83],[28,0,9,123],[28,8,9,127,"cache"],[28,13,9,132],[28,17,9,136,"cache"],[28,22,9,141],[28,23,9,142,"has"],[28,26,9,136],[28,27,9,146,"obj"],[28,30,9,136],[28,31,9,123],[28,33,9,152],[29,0,9,154],[29,13,9,161,"cache"],[29,18,9,166],[29,19,9,167,"get"],[29,22,9,161],[29,23,9,171,"obj"],[29,26,9,161],[29,27,9,154],[30,0,9,178],[32,0,9,179],[32,8,9,183,"newObj"],[32,14,9,189],[32,17,9,192],[32,19,9,179],[34,0,9,196],[34,8,9,200,"obj"],[34,11,9,203],[34,15,9,207],[34,19,9,196],[34,21,9,213],[35,0,9,215],[35,10,9,219,"hasPropertyDescriptor"],[35,31,9,240],[35,34,9,243,"Object"],[35,40,9,249],[35,41,9,250,"defineProperty"],[35,55,9,243],[35,59,9,268,"Object"],[35,65,9,274],[35,66,9,275,"getOwnPropertyDescriptor"],[35,90,9,215],[37,0,9,301],[37,11,9,306],[37,15,9,310,"key"],[37,18,9,301],[37,22,9,317,"obj"],[37,25,9,301],[37,27,9,322],[38,0,9,324],[38,12,9,328,"Object"],[38,18,9,334],[38,19,9,335,"prototype"],[38,28,9,328],[38,29,9,345,"hasOwnProperty"],[38,43,9,328],[38,44,9,360,"call"],[38,48,9,328],[38,49,9,365,"obj"],[38,52,9,328],[38,54,9,370,"key"],[38,57,9,328],[38,58,9,324],[38,60,9,376],[39,0,9,378],[39,14,9,382,"desc"],[39,18,9,386],[39,21,9,389,"hasPropertyDescriptor"],[39,42,9,410],[39,45,9,413,"Object"],[39,51,9,419],[39,52,9,420,"getOwnPropertyDescriptor"],[39,76,9,413],[39,77,9,445,"obj"],[39,80,9,413],[39,82,9,450,"key"],[39,85,9,413],[39,86,9,410],[39,89,9,457],[39,93,9,378],[41,0,9,463],[41,14,9,467,"desc"],[41,18,9,471],[41,23,9,476,"desc"],[41,27,9,480],[41,28,9,481,"get"],[41,31,9,476],[41,35,9,488,"desc"],[41,39,9,492],[41,40,9,493,"set"],[41,43,9,471],[41,44,9,463],[41,46,9,499],[42,0,9,501,"Object"],[42,12,9,501,"Object"],[42,18,9,507],[42,19,9,508,"defineProperty"],[42,33,9,501],[42,34,9,523,"newObj"],[42,40,9,501],[42,42,9,531,"key"],[42,45,9,501],[42,47,9,536,"desc"],[42,51,9,501],[43,0,9,544],[43,11,9,463],[43,17,9,550],[44,0,9,552,"newObj"],[44,12,9,552,"newObj"],[44,18,9,558],[44,19,9,559,"key"],[44,22,9,558],[44,23,9,552],[44,26,9,566,"obj"],[44,29,9,569],[44,30,9,570,"key"],[44,33,9,569],[44,34,9,552],[45,0,9,577],[46,0,9,579],[47,0,9,581],[48,0,9,583],[50,0,9,584,"newObj"],[50,4,9,584,"newObj"],[50,10,9,590],[50,11,9,591,"default"],[50,18,9,584],[50,21,9,601,"obj"],[50,24,9,584],[52,0,9,606],[52,8,9,610,"cache"],[52,13,9,606],[52,15,9,617],[53,0,9,619,"cache"],[53,6,9,619,"cache"],[53,11,9,624],[53,12,9,625,"set"],[53,15,9,619],[53,16,9,629,"obj"],[53,19,9,619],[53,21,9,634,"newObj"],[53,27,9,619],[54,0,9,644],[56,0,9,645],[56,11,9,652,"newObj"],[56,17,9,645],[57,0,9,661],[59,0,11,0],[59,3,11,1],[59,6,11,4,"_utils"],[59,12,11,10],[59,13,11,11,"default"],[59,20,11,0],[59,22,11,20],[59,28,11,0],[59,30,11,28],[60,0,12,2,"visitor"],[60,4,12,2,"visitor"],[60,11,12,9],[60,13,12,11],[61,0,11,28],[61,3,11,0],[62,0,14,0],[62,3,14,1],[62,6,14,4,"_utils"],[62,12,14,10],[62,13,14,11,"default"],[62,20,14,0],[62,22,14,20],[62,35,14,0],[62,37,14,35],[63,0,15,2,"visitor"],[63,4,15,2,"visitor"],[63,11,15,9],[63,13,15,11],[63,15,14,35],[64,0,16,2,"builder"],[64,4,16,2,"builder"],[64,11,16,9],[64,13,16,11],[64,14,16,12],[64,28,16,11],[64,30,16,28],[64,36,16,11],[64,37,14,35],[65,0,17,2,"fields"],[65,4,17,2,"fields"],[65,10,17,8],[65,12,17,10],[66,0,18,4,"name"],[66,6,18,4,"name"],[66,10,18,8],[66,12,18,10],[67,0,19,6,"validate"],[67,8,19,6,"validate"],[67,16,19,14],[67,18,19,16],[67,19,19,17],[67,22,19,20,"_utils"],[67,28,19,26],[67,29,19,27,"assertNodeType"],[67,43,19,16],[67,45,19,43],[67,57,19,16],[68,0,18,10],[68,7,17,10],[69,0,21,4,"expectedNode"],[69,6,21,4,"expectedNode"],[69,18,21,16],[69,20,21,18],[70,0,22,6,"validate"],[70,8,22,6,"validate"],[70,16,22,14],[70,18,22,16],[70,19,22,17],[70,22,22,20,"_utils"],[70,28,22,26],[70,29,22,27,"assertOneOf"],[70,40,22,16],[70,75,22,43,"_placeholders"],[70,88,22,56],[70,89,22,57,"PLACEHOLDERS"],[70,101,22,16],[71,0,21,18],[72,0,17,10],[73,0,14,35],[73,3,14,0],[74,0,26,0],[74,3,26,1],[74,6,26,4,"_utils"],[74,12,26,10],[74,13,26,11,"default"],[74,20,26,0],[74,22,26,20],[74,45,26,0],[74,47,26,45],[75,0,27,2,"builder"],[75,4,27,2,"builder"],[75,11,27,9],[75,13,27,11],[75,14,27,12],[75,20,27,11],[75,21,26,45],[76,0,28,2,"fields"],[76,4,28,2,"fields"],[76,10,28,8],[76,12,28,10],[77,0,29,4,"name"],[77,6,29,4,"name"],[77,10,29,8],[77,12,29,10],[78,0,30,6,"validate"],[78,8,30,6,"validate"],[78,16,30,14],[78,18,30,16],[78,19,30,17],[78,22,30,20,"_utils"],[78,28,30,26],[78,29,30,27,"assertValueType"],[78,44,30,16],[78,46,30,44],[78,54,30,16],[79,0,29,10],[80,0,28,10],[81,0,26,45],[81,3,26,0]],"functionMap":{"names":["<global>","_getRequireWildcardCache","_interopRequireWildcard"],"mappings":"AAA;ACM,0LD;AEE,qpBF"}},"type":"js/module"}]}